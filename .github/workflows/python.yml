---
name: Python application

on: [push]

jobs:
  build:
    name: Python test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Download ssd
        run: |
          make models/ssd_mobilenet/frozen_inference_graph.pb
      - name: Download yolo
        run: |
          make models/yolo/yolov3-tiny.weights
      - name: Install backend package
        run: |
          pip install -e .
      - name: Test with pytest
        run: |
          pip install pytest
          pytest tests/

  releasing:
    name: Publish docker images
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: make dist config.yml
      - name: ðŸš€ Build amd64 and push
        #if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.amd64
          platforms: linux/amd64
          push: true
          tags: cristianpb/object-detection:amd64
          target: prod
          build-args: |
            APP_PORT:5000
            APP_PATH:/object-detection
      - name: ðŸš€ Build armv7 (raspberry) and push
        #if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.armv7
          platforms: linux/armv7
          push: true
          tags: cristianpb/object-detection:armv7
          target: prod
          build-args: |
            APP_PORT:5000
            APP_PATH:/object-detection
      - name: ðŸš€ Build amr64 (jetson) and push
        #if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.jetson
          platforms: linux/arm64
          push: true
          tags: cristianpb/object-detection:jetson
          target: prod
          build-args: |
            APP_PORT:5000
            APP_PATH:/object-detection
