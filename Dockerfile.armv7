########
#  dev #
########
FROM balenalib/rpi-raspbian:buster as dev

ARG APP_PATH
ARG APP_PORT

WORKDIR /${APP_PATH}

COPY LICENSE ./
COPY README.md ./
COPY requirements.txt ./
COPY setup.py ./
COPY config.yml ./

VOLUME /${APP_PATH}/backend
VOLUME /${APP_PATH}/tests
VOLUME /${APP_PATH}/dist
VOLUME /${APP_PATH}/models
VOLUME /${APP_PATH}/imgs

RUN apt-get update && apt-get upgrade -y && \
        apt-get install -y --fix-missing git \
        libjpeg-dev libpng-dev libtiff-dev libgtk-3-dev \
        libavcodec-extra libavformat-dev libswscale-dev libv4l-dev \
        libxvidcore-dev libx264-dev libjasper1 libjasper-dev \
        libatlas-base-dev gfortran libeigen3-dev libtbb-dev \
        python3-dev python3-numpy && \
        git clone --single-branch --depth=1 https://github.com/dlime/Faster_OpenCV_4_Raspberry_Pi.git && \
        cd Faster_OpenCV_4_Raspberry_Pi/debs && \
        dpkg -i OpenCV*.deb && \
        ldconfig

RUN apt-get install -y python3-dotenv python3-pandas python3-flask python3-picamera python3-redis python3-pip && \
        pip3 install --no-cache-dir Flask Pillow python-dotenv pyyaml && \
        rm -rf /var/lib/apt/lists/*

# Expose the listening port of your app
EXPOSE ${APP_PORT}

ENV FLASK_APP=backend/app.py
ENV DEBUG=1

CMD ["flask", "run", "--host=0.0.0.0"]

################################
# Step 2: "production" target #
################################
FROM dev as prod

ADD backend ./backend
ADD tests ./tests
ADD dist ./dist
VOLUME /${APP_PATH}/models
VOLUME /${APP_PATH}/imgs

COPY LICENSE ./
COPY README.md ./
COPY requirements.txt ./
COPY setup.py ./
COPY config.yml ./

ENV DEBUG=

CMD ["flask", "run", "--host=0.0.0.0"]

# vim:filetype=dockerfile
